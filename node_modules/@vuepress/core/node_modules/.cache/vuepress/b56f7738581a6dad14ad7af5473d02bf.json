{"remainingRequest":"D:\\xingkong\\lzx-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\xingkong\\lzx-vuepress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\xingkong\\lzx-vuepress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\xingkong\\lzx-vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\xingkong\\lzx-vuepress\\docs\\skill\\README.md?vue&type=template&id=6429fe8a&","dependencies":[{"path":"D:\\xingkong\\lzx-vuepress\\docs\\skill\\README.md","mtime":1639618019842},{"path":"D:\\xingkong\\lzx-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xingkong\\lzx-vuepress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\xingkong\\lzx-vuepress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\xingkong\\lzx-vuepress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\xingkong\\lzx-vuepress\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}